<?php
/*
 * 报名
 * */
class EnrollAction extends Action {

	private $result = array("error"=>66535,"msg"=>"unknow","data"=>array());
	
	
	Public function _initialize(){
		$PATH_INFO = $_SERVER['PATH_INFO'];
		$nologinlist = array("/Enroll","/Enroll/","/Enroll/index","/Enroll/index/","/Enroll/step2","/Enroll/step2/");
		if(!in_array($PATH_INFO, $nologinlist)){
			B('AuthCheck');
			if(isweixin()){
				if(!session("SESSION_ZX_PHONE")){
					session("SESSION_ZX_HISTORYURL",$_SERVER['REQUEST_URI']);
					redirect ( '/Account/login' );
				}
			}
		}
	}
	
	/**
	 * 赛程选择
	 */
	public function index() {
		$matchid = htmlspecialchars(addslashes(trim($_REQUEST['m_id'])));
		if(empty($matchid)){
			redirect("/");
		}
		
		//东马订制链接
		$date = Date("Y-m-d H:i:s");
		if($matchid==287){
			redirect("/");
		}
		
		if($matchid == 350 && $date<="2016-10-28 11:00:00" && $date>="2016-10-27 15:00:00"){
    		redirect("/");
    	}
		
		//test code 
		$matchM = new MatchInfoModel();
		$res = $matchM->checkMatchById($matchid);
		if($res){
			session("SESSION_ZX_MATCHID",$matchid);
			$goodM = new GoodsModel();
			//赛程
			$this->assign("course",$goodM->getDataByTypeId($matchid,1));
			//套餐
			$meal = $goodM->getgoodsByMatchId($matchid,0,2);
			$this->assign("meal",json_encode($meal));
			//附加服务
			$this->assign("attach",$goodM->getDataByTypeId($matchid,3));
			//备注
			$this->assign("remarks",$goodM->getDataByTypeId($matchid,4));
			//$matchid
			$this->assign("matchid",$matchid);
			$this->display ("index");
		}else{
// 			echo $matchM->getLastSql();
// 			var_dump($res);
			header("Content-type:text/html;charset=utf-8;");
			die("<p style='font-size:2rem;'>很遗憾！该行程报名名额已满，欢迎选择知行合逸其他赛事行程。<a href='http://mp.weixin.qq.com/s?__biz=MzA5NTU1ODkxNw==&mid=208829162&idx=1&sn=a8b02f1993ead8a20898c4bf269a9a1d#rd'>点击查看其他行程</a></p>");
		}
	}
	
	public function createorder(){
		$_POST = session("SESSION_ZX_SHOPPINGCART");
		$date = Date("Y-m-d H:i:s");
		$matchid = session("SESSION_ZX_MATCHID");
		$orderData['uid'] = $uid =  session("SESSION_ZX_AUTHID");
		$orderData['matchid'] = $matchid;
		$orderData['orderid'] = createOrderId($orderData['uid'],$orderData['matchid']);
		$orderData['platform'] = "nuomi";
		$orderData['user_remarks'] = htmlspecialchars(addslashes(trim($_POST['remarks'])));
		$orderData['ctime'] = $orderData['utime'] = $date;
		$orderData['paystats'] = -1;
		$matchM = new MatchInfoModel();
		$res = $matchM->checkMatchById($matchid);
		if($res[0]['m_ptype']=="海外"){
			$orderData['pay_deadline'] = Date("Y-m-d H:i:s",strtotime("+5400 seconds"));
		}else{
			$orderData['pay_deadline'] = Date("Y-m-d H:i:s",strtotime("+1800 seconds"));
		}
		$UO = new UserOrdersModel();
		$UO->startTrans();
		$orderid = $UO->creatOrders($orderData);
		if($orderid){
			$orderprice = $payprice = 0;
			$orderinfoM = new OrdersInfoModel();
			$orderinfoM->startTrans();
			//$delres = $orderinfoM->delJdOrders($orderid);
			$delres = $orderinfoM->releaseOrders($orderid);
			if($delres!==false){
				//加小单
				$GM = new GoodsModel();
		
				$orderConfig = array(
						"course"=>array("type"=>"赛程"),
						"meal"=>array("type"=>"套餐"),
						"attach"=>array("type"=>"附加优质服务")
				);
		
				//是否包含单肩差
				$issingle = htmlspecialchars(addslashes(trim($_POST['issingle'])));
		
				foreach ($orderConfig as $key=>$value){
					$goodsid =$_POST[$key];
					$goodsIdList = array();
						
					if(gettype($goodsid)=="string"){
						array_push($goodsIdList, htmlspecialchars(addslashes(trim($goodsid))));
					}else if(gettype($goodsid)=="array"){
						foreach ($goodsid as $k=>$v){
							array_push($goodsIdList,htmlspecialchars(addslashes(trim($v))));
						}
					}
						
					if($goodsIdList){
						for($i=0,$len=count($goodsIdList);$i<$len;$i++){
							$goodsinfo = $GM->getGoodsInfoById($goodsIdList[$i]);
							if($goodsinfo){
								$count = 1;
								$data = array();
								$data['uid'] = $uid;
								$data['orderid'] = $orderid;
								$data['goodsid']= $goodsIdList[$i];
								$data['goodsprice'] = $goodsinfo['g_price']*$count;
								$data['goods_pay_sprice'] = $goodsinfo['g_currprice']*$count;
								$data['count'] = $count;
								$data['ctime'] = $data['utime'] = $date;
								$data['type'] = $value['type'];
								if($orderinfoM->addOrders($data)){
									if(false===$GM->updateGoodsCountById_v3($data['goodsid'], $data['count'],true)){
										$UO->rollback();
										$orderinfoM->rollback();
										$rs = array("error"=>1005,"msg"=>"下单失败，请重试！！");
									}else{
										$orderprice += $data['goodsprice'];
										$payprice += $data['goods_pay_sprice'];
									}
								}else{
									$UO->rollback();
									$orderinfoM->rollback();
									$rs = array("error"=>1002,"msg"=>"下单失败，请重试！！");
									header("Content-type:text/html;charset=utf-8;");
									$msg = '<h2><a href="/Matchinfo?m_id='.$matchid.'" >返回赛事首页</a></h2><script>alert("'.$rs['msg'].'")</script>';
									die($msg);
								}
		
								if($issingle && $key=="meal"){
									$count = 1;
									$data = array();
									$data['uid'] = $uid;
									$data['orderid'] = $orderid;
									$data['goodsid']= $goodsIdList[$i];
									$data['goodsprice'] = $goodsinfo['g_singleprice']*$count;
									$data['goods_pay_sprice'] = $goodsinfo['g_singleprice']*$count;
									$data['count'] = $count;
									$data['ctime'] = $data['utime'] = $date;
									$data['type'] = "单房差";
									if($orderinfoM->addOrders($data)){
										$orderprice += $data['goodsprice'];
										$payprice += $data['goods_pay_sprice'];
									}else{
										$UO->rollback();
										$orderinfoM->rollback();
										$rs = array("error"=>1006,"msg"=>"下单失败，请重试！！！");
										header("Content-type:text/html;charset=utf-8;");
										$msg = '<h2><a href="/Matchinfo?m_id='.$matchid.'" >返回赛事首页</a></h2><script>alert("'.$rs['msg'].'")</script>';
										die($msg);
									}
								}
							}else{
								$UO->rollback();
								$orderinfoM->rollback();
								$rs = array("error"=>15,"msg"=>"该".$value['type']."名额已满！您可以尝试其它赛程！");
								header("Content-type:text/html;charset=utf-8;");
								$msg = '<h2><a href="/Matchinfo?m_id='.$matchid.'" >返回赛事首页</a></h2><script>alert("'.$rs['msg'].'")</script>';
								die($msg);
							}
						}
					}else{
						if($key=="course"){
							$UO->rollback();
							$orderinfoM->rollback();
							$rs = array("error"=>14,"msg"=>"请选择您要报名的赛程！");
							header("Content-type:text/html;charset=utf-8;");
							$msg = '<h2><a href="/Matchinfo?m_id='.$matchid.'" >返回赛事首页</a></h2><script>alert("'.$rs['msg'].'")</script>';
							die($msg);
						}
					}
				}
				$payprice = $payprice>=0?$payprice:0;
				$orderprice = $orderprice>=0?$orderprice:0;
				$updateprice = $UO->updateAllpriceByOrderid($uid, $orderid,$payprice,$orderprice);
				if(!($updateprice===false)){
					$UO->commit();
					$orderinfoM->commit();
					session("SESSION_ZX_ORDERID",$orderid);
					$rs = array("error"=>0,"msg"=>$orderid);
// 					$redis = new RedisModel();
// 					$arr = array(
// 							"a"=>"OrderNotice",
// 							"m"=>"notice",
// 							"d"=>array("orderid"=>$orderid,"status"=>5));
// 					$redis->lpush("order_notice_list_v2",json_encode($arr));
				}else{
					$orderinfoM->rollback();
					$UO->rollback();
					$rs = array("error"=>11,"msg"=>"下单失败，请重试！");
				}
			}else{
				$UO->rollback();
				$orderinfoM->rollback();
				$rs = array("error"=>12,"msg"=>"下单失败，请重试！！");
			}
		}else{
			$UO->rollback();
			$msg = "订单创建失败！";
			$rs = array("error"=>13,"msg"=>$msg);
		}

		if($rs['error']==0){
			redirect("/Enroll/userdata?orderid=".$rs['msg']);
		}else{
			header("Content-type:text/html;charset=utf-8;");
			$msg = '<h2><a href="/Matchinfo?m_id='.$matchid.'" >返回赛事首页</a></h2><script>alert("'.$rs['msg'].'")</script>';
			echo $msg;
			die();
		}
	}
	
	public function step2(){
		$rs = array("error"=>65535,"msg"=>"未知错误","data"=>"");
		
		$matchid = session("SESSION_ZX_MATCHID");
		$marchM = new MatchInfoModel();
		
		session("SESSION_ZX_SHOPPINGCART",$_POST);
		//赛事报锃截至或未上线
		if(!$marchM->checkMatchById($matchid)){
			$rs['error'] = 1;
			$rs['msg'] = "该赛事目前不提供报名！";
			echo json_encode($rs);
			exit();
		}
		
		if(session("SESSION_ZX_AUTHID")){
			$rs['error'] = 0;
			$rs['login'] = 1;
			$rs['msg'] = "已登录";
			echo json_encode($rs);
			exit();
		}else{
			session("SESSION_ZX_HISTORYURL","/Enroll/createorder");
			$rs['error'] = 0;
			$rs['login'] = 0;
			$rs['msg'] = "未登录";
			echo json_encode($rs);
			exit();
		}		
	}
	
	/**
	 * 用户资料填写
	 */
	public function ziliao(){
		$riqi_reg = '/^(19|20)\d{2}(-|\/)(1[0-2]|0?[1-9])(-|\/)(0?[1-9]|[1-2][0-9]|3[0-1])$/';
		$shouji_reg = '/^1[\d]{10}$/';
		//$email_reg = '/^(\w)+(\.\w+)*@(\w)+(-|_)+((\.\w{2,3}){1,3})$/';
		
		$email_reg = '/^([a-zA-Z0-9_-|.])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/';
		$msg ="";
		if(!empty($_POST)){
			$step = addslashes(trim($_GET['step']));
			if($step==1){
				$data['name'] = addslashes(trim($_POST['name']));
				$data['sfz_code'] =addslashes(trim($_POST['sfz_code']));
				$data['birth']		= addslashes(trim($_POST['birth']));
				$data['sexy']	= addslashes(trim($_POST['sexy']));			
				$data['country']			= addslashes(trim($_POST['country']));
				$data['area']			= addslashes(trim($_POST['area']));
				$data['addr']		= addslashes(trim($_POST['addr']));
				$data['postcode']		= addslashes(trim($_POST['postcode']));
				$data['e_mail']		= addslashes(trim($_POST['e_mail']));
				$data['cloth_size']		= addslashes(trim($_POST['cloth_size']));
				if(
						empty($data['name']) ||
						empty($data['sfz_code']) ||
// 						empty($data['birth']) ||
// 						empty($data['sexy']) ||
						empty($data['country']) ||
// 						empty($data['area']) ||
// 						empty($data['addr']) ||
// 						empty($data['postcode']) ||
						empty($data['e_mail']) //||
//						empty($data['cloth_size']) 
				){
					$msg .= "必填信息不能为空;";
				}
							
				$youxiang = preg_match($email_reg, $data['e_mail']);
				if(!$youxiang){
					$msg .= "邮箱格式错误;";
				}
				
				if($data['country']=="中国"){
					$codeinfo = $this->getIDCardInfo($data['sfz_code']);
					if($codeinfo['error']===2){
						$data['birth'] = $codeinfo['birthday'];
						$data['sexy'] = $codeinfo['sexy'];
					}else{
						$msg .= "身份证格式错误".$data['country'];
					}
				}
				
				$data['ctime'] = $data['utime']	= date("Y-m-d H:i:s");
				$data['uid'] = session("SESSION_ZX_AUTHID");
				$data['phone'] = session("SESSION_ZX_PHONE");
				if($msg == ""){
					$M = new UserInfoModel();
					$M->startTrans();
					$rs = $M->createUserinfo($data);
					if($rs === false){
						$msg = "添加失败,可能已经添加过！";
						$M->rollback();
					}else{
						$msg = "ok";
						$accountM = new AccountModel();
						if($accountM ->changeState($data['uid'], 3)){
							session("SESSION_ZX_USERSTATE",3);
							$M->commit();
						}else{
							$msg = "添加失败,系统错误！";
							$M->rollback();
						}
					}
				}
			}else{
				//其它资料
				$data['pass_code'] = addslashes(trim($_POST['pass_code']));
				$data['surname'] =addslashes(trim($_POST['surname']));
				$data['en_name']		= addslashes(trim($_POST['en_name']));
				$data['issue_date']	= addslashes(trim($_POST['issue_date']));			
				$data['expiry_date']			= addslashes(trim($_POST['expiry_date']));
				$data['contact_name']			= addslashes(trim($_POST['contact_name']));
				$data['contact_phone']		= addslashes(trim($_POST['contact_phone']));
				
				$data['isattended']	= addslashes(trim($_POST['isattended']));
				$data['personbest']			= addslashes(trim($_POST['personbest']));
				$data['personbestmatch']			= addslashes(trim($_POST['personbestmatch']));
				$data['wishfinish']		= addslashes(trim($_POST['wishfinish']));
				
				if(empty($data['contact_name']) || empty($data['contact_phone'])){
					$msg .= "必填信息不能为空;";
				}

				if(!phoneCheck($data['contact_phone'])){
					$msg .= "手机格式不正确;";
				}
				
				if($msg == ""){
					$M = new UserInfoModel();
					$M->startTrans();
					$rs = $M->updateUserinfo(session("SESSION_ZX_AUTHID") ,$data);
					if($rs === false){
						$msg = "添加失败！";
						$M->rollback();
					}else{
						$msg = "ok";
						$accountM = new AccountModel();
						if($accountM ->changeState(session("SESSION_ZX_AUTHID"), 4)){
							session("SESSION_ZX_USERSTATE",4);
							$M->commit();
						}else{
							$msg = "添加失败,系统错误！";
							$M->rollback();
						}
					}
				}
				
			}
			
		}else{
			$msg .= "上传的数据错误;";
		}
		$result = array("msg"=>$msg,"rd"=>$rs);
		echo json_encode($result);
	}
	
	/**
	 * 检验生份证号
	 * @param unknown_type $IDCard
	 * @return number
	 */
	function getIDCardInfo($IDCard){
		$result['error']=0;//0：未知错误，1：身份证格式错误，2：无错误
		$result['flag']='';//0标示成年，1标示未成年
		$result['tdate']='';//生日，格式如：2012-11-15
		$result['sexy']='';//生日，格式如：2012-11-15
		if(!eregi("^[1-9]([0-9a-zA-Z]{17}|[0-9a-zA-Z]{14})$",$IDCard)){
			$result['error']=1;
			return $result;
		}else{
			if(strlen($IDCard)==18){
				$tyear=intval(substr($IDCard,6,4));
				$tmonth=intval(substr($IDCard,10,2));
				$tday=intval(substr($IDCard,12,2));
				if($tyear>date("Y")||$tyear<(date("Y")-100)){
					$flag=0;
				}elseif($tmonth<0||$tmonth>12){
					$flag=0;
				}elseif($tday<0||$tday>31){
					$flag=0;
				}else{
					$tmonth = $tmonth <10?'0'.$tmonth:$tmonth;
					$tday = $tday <10?'0'.$tday:$tday;
					$tdate=$tyear."-".$tmonth."-".$tday;
					if((time()-mktime(0,0,0,$tmonth,$tday,$tyear))>18*365*24*60*60){
						$flag=0;
					}else{
						$flag=1;
					}
				}
				$sexy = $IDCard[16]%2?1:2;
			}elseif(strlen($IDCard)==15){
				$tyear=intval("19".substr($IDCard,6,2));
				$tmonth=intval(substr($IDCard,8,2));
				$tday=intval(substr($IDCard,10,2));
				if($tyear>date("Y")||$tyear<(date("Y")-100)){
					$flag=0;
				}elseif($tmonth<0||$tmonth>12){
					$flag=0;
				}elseif($tday<0||$tday>31){
					$flag=0;
				}else{
					$tmonth = $tmonth <10?'0'.$tmonth:$tmonth;
					$tday = $tday <10?'0'.$tday:$tday;
					$tdate=$tyear."-".$tmonth."-".$tday;
					if((time()-mktime(0,0,0,$tmonth,$tday,$tyear))>18*365*24*60*60){
						$flag=0;
					}else{
						$flag=1;
					}
				}
				$sexy = $IDCard[14]%2?1:2;
			}
		}
		$result['error']=2;//0：未知错误，1：身份证格式错误，2：无错误
		$result['isAdult']=$flag;//0标示成年，1标示未成年
		$result['birthday']=$tdate;//生日日期
		$result['sexy']=$sexy;
		return $result;
	}
	
	public function userdata(){
		$userState = session("SESSION_ZX_USERSTATE");
		$orderid = htmlspecialchars(addslashes(trim($_GET['orderid'])))?htmlspecialchars(addslashes(trim($_GET['orderid']))):session("SESSION_ZX_ORDERID");
		$this->assign("orderid",$orderid);
		$orderM = new  UserOrdersModel;
		$orderinfo = $orderM->getorderinfo($orderid);
		$dateline = $orderinfo[0]['pay_deadline'];
		
		session("SESSION_ZX_MATCHID");
		redirect ("/PayResult/payorder?orderid=".$orderid);
		
// 		switch ($userState){
// 			case 2://已绑定手机，去完成基本资料
// 				$this->assign("dateline",$dateline);
// 				$step = 1;
// 				break;
// 			case 3: //已完成基本走资 料  去完成其它资 料
// // 				$match_id =  session("SESSION_ZX_MATCHID");
// // 				$matchM = new MatchInfoModel();
// // 				$res = $matchM->checkMatchById($match_id);
// // 				$this->assign("match_ptype",$res[0]['m_ptype']);
// // 				$this->assign("dateline",$dateline);
// // 				$step = 2;
// // 				break;
// 			case 4: //资料完成 去支付
// 				session("SESSION_ZX_MATCHID");
// 				redirect ("/PayResult/payorder?orderid=".$orderid);
// 				break;
// 			default:
// 				//重新登录
// 				session("SESSION_ZX_HISTORYURL",$_SERVER['REQUEST_URI']);
// 				redirect ( '/Account/login' );
// 		};
// 		$this->assign("step",$step);
// 		$this->display("userdata");
	}

}