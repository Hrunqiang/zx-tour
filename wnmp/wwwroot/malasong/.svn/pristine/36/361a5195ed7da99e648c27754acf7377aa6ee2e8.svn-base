<?php

class LoginAction extends Action {
	
	Public function _initialize(){
		if($this->checkip()){
			session("Safetyip",1);
			$this->assign('Safetyip',1);
		}else{
			session("Safetyip",0);
			$this->assign('Safetyip',0);
		}
// 		B('AuthCheck');
	}
	public function index() {
		$this->display ( "login" );
	}
	/**
	 * 登录界面
	 */
	public function login() {
		if ($this->isPost()) {
			$user_name = addslashes(trim($_POST['user_name']));
			$password = addslashes(trim($_POST['password']));
			$auth = new UserAuthModel();
			if($auth->auth($user_name, $password)){//登陆成功
				redirect("./?s=index&a=index");
			}else{
				$this->assign ( "error", '用户名或密码错误！' );	
			}
		}
		$this->display ( "login" );
	}
	/**
	 * 跳转方法(独立与login模块)
	 * @param <type> $message
	 * @param <type> $url
	 * @param <type> $timeout     默认:2秒跳转
	 * @param <type> $stop_loop   1:停止跳走,   默认0:自动跳转
	 */
	public function message($message, $url = null, $timeout = 2, $stop_loop=0)
	{
		if ($url == null)
		{
			$url = $_SERVER['HTTP_REFERER'];
		}
		$ac	= new LoginAction();
		$ac->assign('stop_loop', $stop_loop);
		$ac->assign('url_page', $url);
		$ac->assign('message', $message);
		$ac->assign('timeout', $timeout);
		$ac->display('Login:message');
		exit();
	}
	/**
	 * 退出
	 */
	public function logout()
	{
		session('authId',null);
		session('user',null);
		session('is_admin',null);
		session('right_action',null);
		header('location:./?s=login');
	}
	/**
	 * 验证码
	 */
	public function verify() {
		import ( 'ORG.Util.Image_sae' );
		Image::buildImageVerify(5, 1, $type='png', 70, 26);
	}
	
	public function checkip(){
		$ip = get_client_ip(); //得到IP
		$ALLOWED_IP=array('124.207.107.221','127.0.0.1','192.168.10.*');//安全IP
		$check_ip_arr= explode('.',$ip);//要检测的ip拆分成数组
		#限制IP
		if(!in_array($ip,$ALLOWED_IP)) {
			$bl=true;
			foreach ($ALLOWED_IP as $val){
				if(strpos($val,'*')!==false){//发现有*号替代符
					$arr=array();//
					$arr=explode('.', $val);
					//$bl=true;//用于记录循环检测中是否有匹配成功的
					for($i=0;$i<4;$i++){
						if($arr[$i]!='*'){//不等于*  就要进来检测，如果为*符号替代符就不检查
							if($arr[$i]!=$check_ip_arr[$i]){
								$bl=false;
								break;//终止检查本个ip 继续检查下一个ip
							}
						}
					}//end for
					if($bl){//如果是true则找到有一个匹配成功的就返回
						break;
					}
				}
			}//end foreach
			return $bl;
		}else{
			return true;
		}
	}
	
	public function phone_login(){
		if ($this->isPost()) {
			$phone_num = addslashes(trim($_POST['phone_num']));
			$capa = addslashes(trim($_POST['capa']));
			$auth = new UserAuthModel();
			if($phone_num){//登陆成功
				if($capa){
					if(md5($phone_num.$capa)==session('verify')){
						if($auth->phone_auth($phone_num)){
							redirect("./?s=index&a=index");
						}else{
							$this->assign ( "error", '验证码错误！' );
						}
					}else{
						$this->assign ( "error", '验证码错误！' );
					}
				}else{
					$this->assign ( "error", '请输入正确的验证码！' );
				}
				//
			}else{
				$this->assign ( "error", '请输入正确的手机号！' );	
			}
		}
		$this->display ( "login" );
	}
	
	public function sms_verify(){
		$phone = trim($_GET['phone']);
		if($phone){
			$auth = new UserAuthModel();
			$res = $auth->get_phone_type($phone);
			if($res){
				$this->send_sms_verify($phone, $res['phonetype']);
				echo json_encode(array("error"=>0,"msg"=>"success"));
			}else{
				echo json_encode(array("error"=>1,"msg"=>"手机号不正确"));
			}
		}else{
			echo json_encode(array("error"=>1,"msg"=>"请输入手机号"));
		}
	}
	
	public function send_sms_verify($mobileValue,$gidValue){
		$verify = rand(10000, 99999);
		session('verify',md5($mobileValue.$verify));
		$msg="您的验证码为：".$verify;
		$msg= mb_convert_encoding($msg, "gb2312", "utf-8");
		$conntent = urlencode ( $msg );
		$url = 'http://220.181.190.36:8092/sms/submit?appid=10&gid='.$gidValue.'&dst='.$mobileValue.'&pid=0&msg='.$conntent.'&linkid=&func=&moflag=0&msgtype=0&msgfmt=15&param=';
		$ch = curl_init ();
		// 设置选项，包括URL
		curl_setopt ( $ch, CURLOPT_URL, $url );
		curl_setopt ( $ch, CURLOPT_RETURNTRANSFER, 1 );
		curl_setopt ( $ch, CURLOPT_HEADER, 0 );
		curl_setopt ($ch, CURLOPT_TIMEOUT,20);
		// 执行并获取HTML文档内容
		$output = curl_exec ( $ch );
		// 释放curl句柄
		curl_close ( $ch );
		// 打印获得的数据
		if ($output === 0) {
			return true;
		} else {
			return false;
		}
	}
}